Grammar

    0 $accept: program $end

    1 program: sop newlines statements eop

    2 newlines: /* empty */
    3         | newlines NL

    4 sop: newlines HD

    5 eop: FT newlines

    6 eos: NL newlines
    7    | ';' newlines

    8 statements: /* empty */
    9           | statements statement eos

   10 statement: assign
   11          | declare
   12          | WR '(' plist ')'

   13 plist: /* empty */
   14      | plist_r

   15 plist_r: para
   16        | plist_r ',' para

   17 para: ST
   18     | aexpr

   19 lp_opt: '-'
   20       | '+'

   21 hp_opt: '*'
   22       | '/'

   23 aexpr: add_exp

   24 add_exp: add_exp_r mul_exp

   25 add_exp_r: /* empty */
   26          | add_exp lp_opt

   27 mul_exp: mul_exp_r atom

   28 mul_exp_r: /* empty */
   29          | mul_exp hp_opt

   30 atom: ID
   31     | NM
   32     | '(' aexpr ')'

   33 assign: ID '=' aexpr
   34       | ID '=' ST

   35 declare: VR ID '=' aexpr
   36        | VR ID '=' ST
   37        | VR ID


Terminals, with rules where they appear

$end (0) 0
'(' (40) 12 32
')' (41) 12 32
'*' (42) 21
'+' (43) 20
',' (44) 16
'-' (45) 19
'/' (47) 22
';' (59) 7
'=' (61) 33 34 35 36
error (256)
WR (258) 12
FT (259) 5
HD (260) 4
VR (261) 35 36 37
ID (262) 30 33 34 35 36 37
NM (263) 31
NL (264) 3 6
ST (265) 17 34 36


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
program (21)
    on left: 1, on right: 0
newlines (22)
    on left: 2 3, on right: 1 3 4 5 6 7
sop (23)
    on left: 4, on right: 1
eop (24)
    on left: 5, on right: 1
eos (25)
    on left: 6 7, on right: 9
statements (26)
    on left: 8 9, on right: 1 9
statement (27)
    on left: 10 11 12, on right: 9
plist (28)
    on left: 13 14, on right: 12
plist_r (29)
    on left: 15 16, on right: 14 16
para (30)
    on left: 17 18, on right: 15 16
lp_opt (31)
    on left: 19 20, on right: 26
hp_opt (32)
    on left: 21 22, on right: 29
aexpr (33)
    on left: 23, on right: 18 32 33 35
add_exp (34)
    on left: 24, on right: 23 26
add_exp_r (35)
    on left: 25 26, on right: 24
mul_exp (36)
    on left: 27, on right: 24 29
mul_exp_r (37)
    on left: 28 29, on right: 27
atom (38)
    on left: 30 31 32, on right: 27
assign (39)
    on left: 33 34, on right: 10
declare (40)
    on left: 35 36 37, on right: 11


state 0

    0 $accept: . program $end

    $default  reduce using rule 2 (newlines)

    program   go to state 1
    newlines  go to state 2
    sop       go to state 3


state 1

    0 $accept: program . $end

    $end  shift, and go to state 4


state 2

    3 newlines: newlines . NL
    4 sop: newlines . HD

    HD  shift, and go to state 5
    NL  shift, and go to state 6


state 3

    1 program: sop . newlines statements eop

    $default  reduce using rule 2 (newlines)

    newlines  go to state 7


state 4

    0 $accept: program $end .

    $default  accept


state 5

    4 sop: newlines HD .

    $default  reduce using rule 4 (sop)


state 6

    3 newlines: newlines NL .

    $default  reduce using rule 3 (newlines)


state 7

    1 program: sop newlines . statements eop
    3 newlines: newlines . NL

    NL  shift, and go to state 6

    $default  reduce using rule 8 (statements)

    statements  go to state 8


state 8

    1 program: sop newlines statements . eop
    9 statements: statements . statement eos

    WR  shift, and go to state 9
    FT  shift, and go to state 10
    VR  shift, and go to state 11
    ID  shift, and go to state 12

    eop        go to state 13
    statement  go to state 14
    assign     go to state 15
    declare    go to state 16


state 9

   12 statement: WR . '(' plist ')'

    '('  shift, and go to state 17


state 10

    5 eop: FT . newlines

    $default  reduce using rule 2 (newlines)

    newlines  go to state 18


state 11

   35 declare: VR . ID '=' aexpr
   36        | VR . ID '=' ST
   37        | VR . ID

    ID  shift, and go to state 19


state 12

   33 assign: ID . '=' aexpr
   34       | ID . '=' ST

    '='  shift, and go to state 20


state 13

    1 program: sop newlines statements eop .

    $default  reduce using rule 1 (program)


state 14

    9 statements: statements statement . eos

    NL   shift, and go to state 21
    ';'  shift, and go to state 22

    eos  go to state 23


state 15

   10 statement: assign .

    $default  reduce using rule 10 (statement)


state 16

   11 statement: declare .

    $default  reduce using rule 11 (statement)


state 17

   12 statement: WR '(' . plist ')'

    ST  shift, and go to state 24

    ')'       reduce using rule 13 (plist)
    $default  reduce using rule 25 (add_exp_r)

    plist      go to state 25
    plist_r    go to state 26
    para       go to state 27
    aexpr      go to state 28
    add_exp    go to state 29
    add_exp_r  go to state 30


state 18

    3 newlines: newlines . NL
    5 eop: FT newlines .

    NL  shift, and go to state 6

    $default  reduce using rule 5 (eop)


state 19

   35 declare: VR ID . '=' aexpr
   36        | VR ID . '=' ST
   37        | VR ID .

    '='  shift, and go to state 31

    $default  reduce using rule 37 (declare)


state 20

   33 assign: ID '=' . aexpr
   34       | ID '=' . ST

    ST  shift, and go to state 32

    $default  reduce using rule 25 (add_exp_r)

    aexpr      go to state 33
    add_exp    go to state 29
    add_exp_r  go to state 30


state 21

    6 eos: NL . newlines

    $default  reduce using rule 2 (newlines)

    newlines  go to state 34


state 22

    7 eos: ';' . newlines

    $default  reduce using rule 2 (newlines)

    newlines  go to state 35


state 23

    9 statements: statements statement eos .

    $default  reduce using rule 9 (statements)


state 24

   17 para: ST .

    $default  reduce using rule 17 (para)


state 25

   12 statement: WR '(' plist . ')'

    ')'  shift, and go to state 36


state 26

   14 plist: plist_r .
   16 plist_r: plist_r . ',' para

    ','  shift, and go to state 37

    $default  reduce using rule 14 (plist)


state 27

   15 plist_r: para .

    $default  reduce using rule 15 (plist_r)


state 28

   18 para: aexpr .

    $default  reduce using rule 18 (para)


state 29

   23 aexpr: add_exp .
   26 add_exp_r: add_exp . lp_opt

    '-'  shift, and go to state 38
    '+'  shift, and go to state 39

    $default  reduce using rule 23 (aexpr)

    lp_opt  go to state 40


state 30

   24 add_exp: add_exp_r . mul_exp

    $default  reduce using rule 28 (mul_exp_r)

    mul_exp    go to state 41
    mul_exp_r  go to state 42


state 31

   35 declare: VR ID '=' . aexpr
   36        | VR ID '=' . ST

    ST  shift, and go to state 43

    $default  reduce using rule 25 (add_exp_r)

    aexpr      go to state 44
    add_exp    go to state 29
    add_exp_r  go to state 30


state 32

   34 assign: ID '=' ST .

    $default  reduce using rule 34 (assign)


state 33

   33 assign: ID '=' aexpr .

    $default  reduce using rule 33 (assign)


state 34

    3 newlines: newlines . NL
    6 eos: NL newlines .

    NL  shift, and go to state 6

    $default  reduce using rule 6 (eos)


state 35

    3 newlines: newlines . NL
    7 eos: ';' newlines .

    NL  shift, and go to state 6

    $default  reduce using rule 7 (eos)


state 36

   12 statement: WR '(' plist ')' .

    $default  reduce using rule 12 (statement)


state 37

   16 plist_r: plist_r ',' . para

    ST  shift, and go to state 24

    $default  reduce using rule 25 (add_exp_r)

    para       go to state 45
    aexpr      go to state 28
    add_exp    go to state 29
    add_exp_r  go to state 30


state 38

   19 lp_opt: '-' .

    $default  reduce using rule 19 (lp_opt)


state 39

   20 lp_opt: '+' .

    $default  reduce using rule 20 (lp_opt)


state 40

   26 add_exp_r: add_exp lp_opt .

    $default  reduce using rule 26 (add_exp_r)


state 41

   24 add_exp: add_exp_r mul_exp .
   29 mul_exp_r: mul_exp . hp_opt

    '*'  shift, and go to state 46
    '/'  shift, and go to state 47

    $default  reduce using rule 24 (add_exp)

    hp_opt  go to state 48


state 42

   27 mul_exp: mul_exp_r . atom

    ID   shift, and go to state 49
    NM   shift, and go to state 50
    '('  shift, and go to state 51

    atom  go to state 52


state 43

   36 declare: VR ID '=' ST .

    $default  reduce using rule 36 (declare)


state 44

   35 declare: VR ID '=' aexpr .

    $default  reduce using rule 35 (declare)


state 45

   16 plist_r: plist_r ',' para .

    $default  reduce using rule 16 (plist_r)


state 46

   21 hp_opt: '*' .

    $default  reduce using rule 21 (hp_opt)


state 47

   22 hp_opt: '/' .

    $default  reduce using rule 22 (hp_opt)


state 48

   29 mul_exp_r: mul_exp hp_opt .

    $default  reduce using rule 29 (mul_exp_r)


state 49

   30 atom: ID .

    $default  reduce using rule 30 (atom)


state 50

   31 atom: NM .

    $default  reduce using rule 31 (atom)


state 51

   32 atom: '(' . aexpr ')'

    $default  reduce using rule 25 (add_exp_r)

    aexpr      go to state 53
    add_exp    go to state 29
    add_exp_r  go to state 30


state 52

   27 mul_exp: mul_exp_r atom .

    $default  reduce using rule 27 (mul_exp)


state 53

   32 atom: '(' aexpr . ')'

    ')'  shift, and go to state 54


state 54

   32 atom: '(' aexpr ')' .

    $default  reduce using rule 32 (atom)
